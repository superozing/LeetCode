#include "헤더.h"



string solution(int n, int t, int m, vector<string> timetable) 
{
    // 구조 생각)
    // 입력으로 들어오는 timetable의 string을 숫자로 바꾸어서 우선순위 큐에 넣어서 관리하면 좋을 것 같아.
    // 에를 들어서 9:00 -> 900으로, 23:59 -> 2359으로 바꾸면 될 듯.
    // 이제 가장 마지막에 차를 타야 하기 때문에.....큐에서 pop을 계속계속 하면 ...
    
    // 음... 이러면 사람이 한 곳에서 많이 탈 경우를 계산하지 못한다. 어떤 식으로 정렬될 값을 확인해야 할까?


    // 계산하기 전에, 일단 타임테이블의 모든 값을 컨테이너에 숫자로 변환해서 넣는 것은 해야 할 작업 같음.
    // 아니면 시간 끼리의 우선순위를 비교하는 로직을 새로 짜도 되지만 비효율적인 느낌이 든다.

    // 해당 시간에 타려는 사람이 몇 명 있는지를 알기 위해서 페어 구조체를 정의하는 것도 좋아보인다.
    // 음.. 만약에 페어 구조체를 정의한다면-> 자료구조에 넣어 관리할 때 이미 해당 데이터가 있는지를 찾아야 하기 때문에...
    // 가장 먼저 떠오르는 건 리스트이긴 해.

    // 만약 중간에 리스트에 데이터를 채우는 과정에서 버스 배차 막차보다 늦은 경우가 있다면 더이상 타임테이블을 체크할 필요가 없어지게 된다.





    // 그리고 마지막에 정수 -> 시간으로 바꾸어주면 될 듯.
    string answer = "";

    return answer;
}